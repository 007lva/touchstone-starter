// 
// Views
// ==============================



// Temp solution for flexible view layout

.FlexLayout {
	.display-flex();
	.flex-direction(column);
}




// Static
// ------------------------------


// setup

.view {
	.fill-space();
	background-color: @body-bg;
	position: fixed;

	// stop weird text rendering issue after transform/animation end
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// disable user interaction

.view-processing {
	pointer-events: none;

	// translucent overlay
	// provide visual feedback to the user that they cannot interact with the 
	// view whilst it's processing
	&:after {
		.animation( fadeIn 150ms );
		.fill-space();
		background-color: rgba(255, 255, 255, 0.66);
		content: "";
		z-index: 2;
	}
}

// add space for the statusbar in iOS

.is-native-app .view {
	padding-top: @statusbar-height;
	
	&:before {
		background-color: @headerbar-bg;
		content: "";
		height: @statusbar-height;
		left: 0;
		position: fixed;
		top: 0;
		width: 100%;
	}
}

// body

.view-inner {
	margin: @padding-base-vertical @padding-base-horizontal;
}




// Animation
// ------------------------------


// disable user interaction on views whilst they transition

[class="view-transition"] {
	pointer-events: none;
}


// transition: none (default)
.view-transition-none-enter { .animation( viewStill 10ms ); }
.view-transition-none-leave { .animation( fade 10ms ); }


// transition: fade
.view-transition-fade-enter { .animation( viewStill 380ms ); }
.view-transition-fade-leave { .animation( fade 380ms ); }


// transition: fade expand 

.view-transition-fade-expand-enter { .animation( viewStill 320ms ); }
.view-transition-fade-expand-leave { .animation( fadeExpand 320ms ); }


// transition: fade contract 

.view-transition-fade-contract-enter { .animation( viewStill 320ms ); }
.view-transition-fade-contract-leave { .animation( fadeContract 320ms ); }




// SHOW
// ====

// common stacking context

.view-transition-show-from-top-enter,
.view-transition-show-from-right-enter,
.view-transition-show-from-bottom-enter,
.view-transition-show-from-left-enter {
	z-index: @view-transition-stack-top;
}

.view-transition-show-from-top-leave,
.view-transition-show-from-right-leave,
.view-transition-show-from-bottom-leave,
.view-transition-show-from-left-leave {
	z-index: @view-transition-stack-bottom;
}

// common animation components

.view-transition-show-from-top-enter,
.view-transition-show-from-top-leave,
.view-transition-show-from-bottom-enter,
.view-transition-show-from-bottom-leave {
	.animation-duration( 380ms );
	.animation-timing-function( cubic-bezier(0.77, 0, 0.175, 1) );
}
.view-transition-show-from-left-enter,
.view-transition-show-from-left-leave,
.view-transition-show-from-right-enter,
.view-transition-show-from-right-leave {
	.animation-duration( 320ms );
	.animation-timing-function( cubic-bezier(0.645, 0.045, 0.355, 1) );
}

// blank state

.view-transition-show-from-top-leave,
.view-transition-show-from-bottom-leave { .animation-name( viewStill ); }

// variants

.view-transition-show-from-top-enter { .animation-name( viewShowFromTopEnter ); }
.view-transition-show-from-right-enter { .animation-name( viewShowFromRightEnter ); }
.view-transition-show-from-bottom-enter { .animation-name( viewShowFromBottomEnter ); }
.view-transition-show-from-left-enter { .animation-name( viewShowFromLeftEnter ); }

.view-transition-show-from-left-leave { .animation-name( viewShowFromLeftLeave ); }
.view-transition-show-from-right-leave{ .animation-name( viewShowFromRightLeave ); }




// REVEAL
// ======

// common stacking context

.view-transition-reveal-from-top-enter,
.view-transition-reveal-from-right-enter,
.view-transition-reveal-from-bottom-enter,
.view-transition-reveal-from-left-enter {
	z-index: @view-transition-stack-bottom;
}

.view-transition-reveal-from-top-leave,
.view-transition-reveal-from-right-leave,
.view-transition-reveal-from-bottom-leave,
.view-transition-reveal-from-left-leave {
	z-index: @view-transition-stack-top;
}

// common animation components

.view-transition-reveal-from-top-enter,
.view-transition-reveal-from-top-leave,
.view-transition-reveal-from-bottom-enter,
.view-transition-reveal-from-bottom-leave {
	.animation-duration( 380ms );
	.animation-timing-function( cubic-bezier(0.77, 0, 0.175, 1) );
}
.view-transition-reveal-from-left-enter,
.view-transition-reveal-from-left-leave,
.view-transition-reveal-from-right-enter,
.view-transition-reveal-from-right-leave {
	.animation-duration( 320ms );
	.animation-timing-function( cubic-bezier(0.645, 0.045, 0.355, 1) );
}

// blank state

.view-transition-reveal-from-top-enter,
.view-transition-reveal-from-bottom-enter { .animation-name( viewStill ); }

// variants

.view-transition-reveal-from-top-leave { .animation-name( viewRevealFromTopLeave ); }
.view-transition-reveal-from-right-leave { .animation-name( viewRevealFromRightLeave ); }
.view-transition-reveal-from-bottom-leave { .animation-name( viewRevealFromBottomLeave ); }
.view-transition-reveal-from-left-leave { .animation-name( viewRevealFromLeftLeave ); }

.view-transition-reveal-from-left-enter { .animation-name( viewRevealFromLeftEnter ); }
.view-transition-reveal-from-right-enter { .animation-name( viewRevealFromRightEnter ); }









